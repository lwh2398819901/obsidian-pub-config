{
    "manifest": {
        "translationVersion": 1737610799143,
        "pluginVersion": "0.3.1"
    },
    "description": {
        "original": "Add advanced bilibili videos support for Media Extended plugin",
        "translation": "Add advanced bilibili videos support for Media Extended plugin"
    },
    "dict": {
        "Notice(\"端口已被占用，请在Media Extended设置中更改端口号\")": "Notice(\"端口已被占用，请在Media Extended设置中更改端口号\")",
        "Notice(`${port}端口已被占用，切换至${newPort}`)": "Notice(`${port}端口已被占用，切换至${newPort}`)",
        ".log(result.foo)": ".log(result.foo)",
        " log(...args)": " log(...args)",
        ".log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log()": ".log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log()",
        " log() {\n  return stream.write(util.format.apply(util, arguments)": " log() {\n  return stream.write(util.format.apply(util, arguments)",
        " log() {\n        this.provider.log(this._interpolate.apply(null, arguments)": " log() {\n        this.provider.log(this._interpolate.apply(null, arguments)",
        ".log(braces('{a,b,c}', { compile: true })": ".log(braces('{a,b,c}', { compile: true })",
        ".log(braces('{a,b,c}')": ".log(braces('{a,b,c}')",
        ".log(ast)": ".log(ast)",
        ".log(stringify(ast.nodes[2])": ".log(stringify(ast.nodes[2])",
        ".log(braces.compile('a/{b,c}/d')": ".log(braces.compile('a/{b,c}/d')",
        ".log(braces.expand('a/{b,c}/d')": ".log(braces.expand('a/{b,c}/d')",
        ".log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}')": ".log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}')",
        ".log(pm.scan('foo/bar/*.js')": ".log(pm.scan('foo/bar/*.js')",
        ".log(isMatch('a.a')": ".log(isMatch('a.a')",
        ".log(isMatch('a.b')": ".log(isMatch('a.b')",
        ".log(picomatch.test('foo/bar', /^(?:([^/]*?)": ".log(picomatch.test('foo/bar', /^(?:([^/]*?)",
        ".log(picomatch.matchBase('foo/bar.js', '*.js')": ".log(picomatch.matchBase('foo/bar.js', '*.js')",
        ".log(picomatch.isMatch('a.a', ['b.*', '*.a'])": ".log(picomatch.isMatch('a.a', ['b.*', '*.a'])",
        ".log(picomatch.isMatch('a.a', 'b.*')": ".log(picomatch.isMatch('a.a', 'b.*')",
        ".log(result)": ".log(result)",
        ".log(picomatch.compileRe(state)": ".log(picomatch.compileRe(state)",
        ".log(picomatch.toRegex(output)": ".log(picomatch.toRegex(output)",
        ".log(mm(['a.js', 'a.txt'], ['*.js'])": ".log(mm(['a.js', 'a.txt'], ['*.js'])",
        ".log(mm.isMatch('a.a', ['b.*', '*.a'])": ".log(mm.isMatch('a.a', ['b.*', '*.a'])",
        ".log(mm.isMatch('a.a', 'b.*')": ".log(mm.isMatch('a.a', 'b.*')",
        ".log(mm.not(['a.a', 'b.b', 'c.c'], '*.a')": ".log(mm.not(['a.a', 'b.b', 'c.c'], '*.a')",
        ".log(mm.contains('aa/bb/cc', '*b')": ".log(mm.contains('aa/bb/cc', '*b')",
        ".log(mm.contains('aa/bb/cc', '*d')": ".log(mm.contains('aa/bb/cc', '*d')",
        ".log(mm.matchKeys(obj, '*b')": ".log(mm.matchKeys(obj, '*b')",
        ".log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js'])": ".log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js'])",
        ".log(mm.some(['foo.js'], ['*.js', '!foo.js'])": ".log(mm.some(['foo.js'], ['*.js', '!foo.js'])",
        ".log(mm.every('foo.js', ['foo.js'])": ".log(mm.every('foo.js', ['foo.js'])",
        ".log(mm.every(['foo.js', 'bar.js'], ['*.js'])": ".log(mm.every(['foo.js', 'bar.js'], ['*.js'])",
        ".log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js'])": ".log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js'])",
        ".log(mm.every(['foo.js'], ['*.js', '!foo.js'])": ".log(mm.every(['foo.js'], ['*.js', '!foo.js'])",
        ".log(mm.all('foo.js', ['foo.js'])": ".log(mm.all('foo.js', ['foo.js'])",
        ".log(mm.all('foo.js', ['*.js', '!foo.js'])": ".log(mm.all('foo.js', ['*.js', '!foo.js'])",
        ".log(mm.all('foo.js', ['*.js', 'foo.js'])": ".log(mm.all('foo.js', ['*.js', 'foo.js'])",
        ".log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js'])": ".log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js'])",
        ".log(mm.capture('test/*.js', 'test/foo.js')": ".log(mm.capture('test/*.js', 'test/foo.js')",
        ".log(mm.capture('test/*.js', 'foo/bar.css')": ".log(mm.capture('test/*.js', 'foo/bar.css')",
        ".log(mm.makeRe('*.js')": ".log(mm.makeRe('*.js')",
        ".log(braces('foo/{a,b,c}/bar')": ".log(braces('foo/{a,b,c}/bar')",
        ".log(braces('foo/{a,b,c}/bar', { expand: true })": ".log(braces('foo/{a,b,c}/bar', { expand: true })",
        ".log(\"Invalid id: \" + id)": ".log(\"Invalid id: \" + id)",
        ".log(t)": ".log(t)",
        ".log(obj)": ".log(obj)",
        ".log(\"loading MxBili\")": ".log(\"loading MxBili\")",
        ".log(\"unloading MxBili\")": ".log(\"unloading MxBili\")",
        ".error(e)": ".error(e)",
        ".error(\"ACTION NEEDED: require('iconv-lite')": ".error(\"ACTION NEEDED: require('iconv-lite')",
        ".error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\")": ".error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\")",
        ".error('Iconv-lite warning: decode()": ".error('Iconv-lite warning: decode()",
        "_error(error, req, res, next)": "_error(error, req, res, next)",
        "_error(err, req, res, next)": "_error(err, req, res, next)",
        "_error(layerError, req, res, next)": "_error(layerError, req, res, next)",
        ".error(500, err)": ".error(500, err)",
        ".error(404, error)": ".error(404, error)",
        ".error(500, error)": ".error(500, error)",
        ".error(403)": ".error(403)",
        ".error(400)": ".error(400)",
        ".error(404)": ".error(404)",
        ".error(412)": ".error(412)",
        ".error(416, {\n        headers: { 'Content-Range': res.getHeader('Content-Range')": ".error(416, {\n        headers: { 'Content-Range': res.getHeader('Content-Range')",
        "gerror(err)": "gerror(err)",
        ".error(err.stack || err.toString()": ".error(err.stack || err.toString()",
        "nerror(err)": "nerror(err)",
        " error() {\n        if (this._showLevel('error')": " error() {\n        if (this._showLevel('error')",
        ".error(this._interpolate.apply(null, arguments)": ".error(this._interpolate.apply(null, arguments)",
        ".error(errorMessage, requestHref, targetHref, err.code || err, errReference)": ".error(errorMessage, requestHref, targetHref, err.code || err, errReference)",
        ".error(error)": ".error(error)",
        ".error(\"invalid p, ignored\" + p)": ".error(\"invalid p, ignored\" + p)",
        ".error(err.stack)": ".error(err.stack)",
        ".error(err)": ".error(err)",
        "name :\n            '/'": "name :\n            '/'",
        "name: 'Tobi'": "name: 'Tobi'",
        "name:\"UTF-8\"": "name:\"UTF-8\"",
        "name:\"\",password:\"": "name:\"\",password:\"",
        "name: \"+e);if(!o.xml_isQName(e))throw new n.InvalidCharacterError(\"": "name: \"+e);if(!o.xml_isQName(e))throw new n.InvalidCharacterError(\"",
        "name: \"+e+\"": "name: \"+e+\"",
        "name: \"+a);}this.throwError(\"": "name: \"+a);}this.throwError(\"",
        "name:\"[\"": "name:\"[\"",
        "name:\"\")+(r.search?r.search:\"": "name:\"\")+(r.search?r.search:\"",
        "name: '\"+e._attribute._localName+\"'": "name: '\"+e._attribute._localName+\"'",
        "link:\"http://www.w3.org/1999/xlink\"": "link:\"http://www.w3.org/1999/xlink\"",
        "text:\"#\"": "text:\"#\"",
        "text:\"Generator declarations are not allowed in legacy contexts\"": "text:\"Generator declarations are not allowed in legacy contexts\"",
        "search:\"\")),r.href=r.format(),r}if(!E.length)return r.pathname=null,r.search?r.path=\"": "search:\"\")),r.href=r.format(),r}if(!E.length)return r.pathname=null,r.search?r.path=\"",
        "search:\"\")),r.auth=e.auth||r.auth,r.slashes=r.slashes||e.slashes,r.href=r.format(),r},o.prototype.parseHost=function(){var e=this.host,t=s.exec(e);t&&(\"": "search:\"\")),r.auth=e.auth||r.auth,r.slashes=r.slashes||e.slashes,r.href=r.format(),r},o.prototype.parseHost=function(){var e=this.host,t=s.exec(e);t&&(\"",
        ".setName(\"代理端口号\")": ".setName(\"代理端口号\")",
        ".setDesc(\"若与现有端口冲突请手动指定其他端口\")": ".setDesc(\"若与现有端口冲突请手动指定其他端口\")"
    }
}
